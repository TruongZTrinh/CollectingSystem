/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.sample;

import database.DatabaseConnection;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import model.SampleRecordValue;

/**
 *
 * @author chuna
 */
public class SampleInfo extends javax.swing.JFrame {

    /**
     * Creates new form SampleInfo
     */
    private SampleRecordValue sampleRecordValue;
    public SampleInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_show_anh = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_show_anh, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_show_anh, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                            
    Connection conn = DatabaseConnection.getConnection();
    SampleRecordValue sampleRecordValue = new SampleRecordValue();
    try {
        conn = DatabaseConnection.getConnection();
        if (conn == null) {
            throw new SQLException("Không thể kết nối đến cơ sở dữ liệu.");
        }

        // Đọc ảnh từ tệp
        File file = new File("D:\\CHUNA\\Downloads\\left.png");  
        if (!file.exists()) {
            throw new IOException("Tệp hình ảnh không tồn tại: " + file.getAbsolutePath());
        }

        byte[] imageBytes = new byte[(int) file.length()];  

        try (FileInputStream fis = new FileInputStream(file)) {
            fis.read(imageBytes);  
        }

        // Thêm vào cơ sở dữ liệu và xác nhận
        boolean isInserted = sampleRecordValue.insertSampleRecordValue(conn, "Hà Nội", "Mẫu kiểm tra định kỳ", imageBytes);
        if (isInserted) {
            System.out.println("Hình ảnh đã được thêm vào cơ sở dữ liệu thành công.");
            // Hiển thị hình ảnh sau khi thêm
            displayImage(conn, 2); // Gọi hàm hiển thị với ID của bản ghi
        } else {
            System.out.println("Lỗi: Hình ảnh không thể thêm vào cơ sở dữ liệu.");
        }

    } catch (IOException e) {
        System.err.println("Lỗi khi đọc tệp: " + e.getMessage());
        e.printStackTrace();
    } catch (SQLException e) {
        System.err.println("Lỗi khi tương tác với cơ sở dữ liệu: " + e.getMessage());
        e.printStackTrace();
    } finally {
        if (conn != null) {
            try {
                conn.close();
            } catch (SQLException e) {
                System.err.println("Lỗi khi đóng kết nối: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }


    }//GEN-LAST:event_formWindowOpened

    // Phương thức để hiển thị hình ảnh
private void displayImage(Connection conn, int id) {
    SampleRecordValue sampleRecordValue = new SampleRecordValue();
    sampleRecordValue.setSampleRecordValueId(id); // ID của bản ghi hình ảnh

    try {
        sampleRecordValue.getSampleRecordValueCoAnhBySampleRecordId(conn, id);
        byte[] imageBytes = sampleRecordValue.getSampleRecordValueImage();
        if (imageBytes != null && imageBytes.length > 0) {
            System.out.println("Hình ảnh đã được tải thành công, kích thước: " + imageBytes.length);
            ImageIcon imageIcon = new ImageIcon(imageBytes);
            lbl_show_anh.setIcon(imageIcon);
        } else {
            System.out.println("Không có hình ảnh nào để hiển thị.");
            lbl_show_anh.setIcon(null);  
        }
    } catch (SQLException ex) {
        Logger.getLogger(SampleInfo.class.getName()).log(Level.SEVERE, null, ex);
        lbl_show_anh.setIcon(null); 
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SampleInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SampleInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SampleInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SampleInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SampleInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbl_show_anh;
    // End of variables declaration//GEN-END:variables
}
